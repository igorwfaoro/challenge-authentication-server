<html>

<head>
    <?- include('../common/head', { title: 'Jade Dragon Auth' }) ?>

    <link rel="stylesheet"
          href="/css/view-index.css">
</head>

<body>

    <div id="viewIndex">

        <div class="bg">

            <div class="content"
                 v-if="loggedUser"
                 style="display: none"
                 :style="{ display: loggedUser ? 'flex' : 'none' }">

                <h1 class="welcome">Welcome {{ loggedUser.name }}!</h1>

                <div class="user-data">
                    <div class="name">{{ loggedUser.name }}</div>
                    <div class="email">{{ loggedUser.email }}</div>
                    <div class="created-at">Created {{ loggedUser.createdAtFormatted }}</div>
                </div>

                <div class="logout">
                    <button class="btn btn-light"
                            v-on:click="logout()">Logout</button>
                </div>
            </div>

        </div>

    </div>

    <?- include('../common/scripts')?>

    <script type="module">

        import { createAppStorage } from '/js/components/storage.js';
        import { createLoader } from '/js/components/loader.js';
        import { createToast } from '/js/components/toast.js';
        import { createHttpClient } from '/js/components/http-client.js';
        import { createRouter } from '/js/components/router.js';
        import { createAuth } from '/js/components/auth.js';

        const AppStorage = createAppStorage();
        const Loader = createLoader(document);
        const Toast = createToast(document);
        const HttpClient = createHttpClient();
        const Router = createRouter();
        const Auth = createAuth(document);

        const viewIndex = new Vue({
            el: '#viewIndex',

            data: {
                loggedUser: null
            },

            created() {
                Auth.verify().then(() => {
                    const user = AppStorage.getData().user;
                    this.loggedUser = {
                        ...user,
                        createdAtFormatted: moment.utc(user.createdAt).local().calendar().toLowerCase()
                    };
                });
            },

            methods: {
                logout(error) {
                    Auth.logout(error);
                }
            }
        });
    </script>
</body>

</html>